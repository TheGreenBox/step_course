digraph sat_step_ach {
    start="random";
    splines=splines;
    nodesep=1;
    bgcolor="transparent";
    node[shape=record, fontname="ISOCPEUR Italic", fontsize=28];
    edge[minlen=3];

    rs485[shape=invhouse];
    {
        rank=same;
        moment[shape=ellipse];
        speed[shape=ellipse];
        mode[shape=ellipse];
    }

    algo_types          [shape=box, label="Библиотека алгоритмов переключения фаз ШД"];
    elementary_motions  [shape=box, label="Модуль дополнительных движений"];
    adc                 [shape=box, label="Модуль АЦП"];
    led_control         [shape=box, label="Модуль работы со светодиодами"];
    timers              [shape=box, label="Модуль таймеров"];
    main                [shape=box, label="Главный цикл"];
    pwm_wrap_module     [shape=box, label="Модуль ШИМ"];
    {
        rank=same;
        synchronized_control[shape=box, label="Модуль синхронного управления"];
        feedback_control    [shape=box, label="Модуль ОС по положению"];
    }
    init                [shape=box, label="Модуль инициализации"];
    {
        rank=same;
        speed_feedback      [shape=box, label="Модуль ОС по скорости"];
        current_feedback    [shape=box, label="Модуль ОС по току"];
        control_algo        [shape=box, label="Шаговый модуль"];
    }
    sensors_encoder     [shape=box, label="Модуль обработки прерываний энкодера"];
    sensors_gray_code_decoder[shape=box, label="Модуль декодирования кода Грея"];

    rs485 -> moment;
    rs485 -> speed;
    rs485 -> mode;

    moment -> synchronized_control;
    speed  -> synchronized_control;
    mode   -> synchronized_control;

    moment -> feedback_control;
    speed  -> feedback_control;
    mode   -> feedback_control;

    synchronized_control -> control_algo;
    feedback_control     -> control_algo;

    control_algo -> pwm_wrap_module;
    control_algo -> algo_types;

    timers -> synchronized_control;
    sensors_encoder -> feedback_control;

    main -> init;
    main -> led_control;
    main -> elementary_motions;

    elementary_motions -> moment;
    elementary_motions -> speed;
    elementary_motions -> mode;

    moment -> current_feedback;
    adc ->  current_feedback;
    current_feedback -> pwm_wrap_module;


    sensors_encoder -> sensors_gray_code_decoder;
}

